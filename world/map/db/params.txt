// Params usable in scripts
// see SP enum in clif.t.hpp

// TODO finish that list and add comments
// TODO refactor: make the names match their SP:: counterpart <== halfway done

BASEEXP                         1    1
JOBEXP                          2    1
Hp                              5    1
MaxHp                           6    1
Sp                              7    1
MaxSp                           8    1
STATUSPOINT                     9    1
HEALXP                          10   1
BaseLevel                       11   1
SKILLPOINT                      12   1
Str                             13   1
Agi                             14   1
Vit                             15   1
Int                             16   1
Dex                             17   1
Luk                             18   1
Class                           19   1
Zeny                            20   1
Sex                             21   1
NEXTBASEEXP                     22   1
NEXTJOBEXP                      23   1
Weight                          24   1
MaxWeight                       25   1
ATK1                            41   1
ATK2                            42   1
MATK1                           43   1
MATK2                           44   1
DEF1                            45   1
DEF2                            46   1
MDEF1                           47   1
MDEF2                           48   1
HIT                             49   1
FLEE1                           50   1
FLEE2                           51   1
CRITICAL                        52   1
JOBLEVEL                        55   1
PARTNER                         57   1
// stats from equipment
Str2                            61   1
Agi2                            62   1
Vit2                            63   1
Int2                            64   1
Dex2                            65   1
Luk2                            66   1
GM                              500  1
ATTACKRANGE                     1000 1
ELTLVL                          1001 1
ELTTYPE                         1002 1
BASE_ATK                        1014 1
POS_X                           1074 1
POS_Y                           1075 1
PVP_CHANNEL                     1076 1
BL_ID                           1077 1
BL_TYPE                         1078 1
CHAR_ID                         1079 1
INVISIBLE                       1080 1
HIDDEN                          1081 1
MUTE_GLOBAL                     1082 1
MUTE_WHISPER                    1083 1
MUTE_PARTY                      1084 1
//MUTE_GUILD                    1085 1
AUTOMOD                         1086 1

bMaxHP      6 // MaxHP + n
bMaxSP      8 // MaxSP + n
bStr        13 // STR + n
bAgi        14 // AGI + n
bVit        15 // VIT + n
bInt        16 // INT + n
bDex        17 // DEX + n
bLuk        18 // LUK + n
bAtk        41 // ATK + n (Minimum attack power)
bAtk2       42 // ATK2 + n (Maximum attack power)
bMatk1      43 // MATK1 + n (Maximum magical attack power)
bMatk2      44 // MATK2 + n (Minimum magical attack power)
// Greatest of MATK1 and MATK2 is taken and becomes MATK1 and MATK2 is set to 0.
// So using MATK2 bonus at the moment has no real benefit you only need greater values to reach same as MATK1.
// MATK1 += INT + (INT / 5) * (INT / 5);
// MATK2 += INT + (INT / 7) * (INT / 7);
// The whole magic system is currently handled in serverdata which only uses MATK1 but the magic attack functions
// do already exist in servercode only skills must be added there.
bDef        45 // Equipment DEF + n
bDef2       46 // VIT based DEF + n
bMdef       47 // Equipment MDEF + n
bMdef2      48 // INT based MDEF + n
bHit        49 // Hit + n
bFlee       50 // Flee + n
bFlee2      51 // Perfect Dodge + n
bCritical   52 // Critical + n
bAspd       53 // Attack speed + n
bDeaf       70

// Those which can be used with the arrow are only bCritical, bAtkEle, bHit, bAddEle, bAddRace, bAddSize and bAddEff. The other bonuses are ignored.
// For more information, have a look here: http://code.google.com/p/eathena/source/browse/trunk/doc/item_bonus.txt

bAtkRange                1000 // A range bonus of n (bAtkRange,n;).
//bAtkEle                  1001 // Gives the player's attacks a n element (bAtkEle,n;).
//bDefEle                  1002 // Gives the player's defense a n element (bDefEle,n;).
//bCastrate                1003 // Adjusts casting time of skill n by x% (bCastrate,n,x;).
bMaxHPrate               1004 // A max HP bonus of n (bMaxHPrate,n;).
bMaxSPrate               1005 // A max SP bonus of n (bMaxSPrate,n;).
//bUseSPrate               1006 // Increases the consumption of SP by n% (bUseSPrate,n;). // mana is subtracted at serverdata this can only become useable if spells are handled by servercode
//bAddEle                  1007 // +x% physical damage against a n element (bAddEle,n,x;).
//bAddRace                 1008 // +x% physical damage against a n race (bAddRace,n,x;).
//bAddSize                 1009 // +x% physical damage against a n size (bAddSize,n,x;).
//bSubEle                  1010 // +x% damage reduction against a n element (bSubEle,n,x;).
//bSubRace                 1011 // +x% damage reduction against race n (bSubRace,n,x;).
//bAddEff                  1012 // Adds a 1/100x% chance to cause effect e to the target when attacking (bAddEff,e,x;).
//bResEff                  1013 // Adds a 1/100x% tolerance to an effect (bResEff,e,x;).
bBaseAtk                 1014 // A n bonus to the basic attack power (bBaseAtk,n;).
bAspdRate                1015 // +n% attack speed (bAspdRate,n;).
bHPrecovRate             1016 // Natural HP recovery ratio increased of n% (bHPrecovRate,n;).
bSPrecovRate             1017 // Natural SP recovery ratio increased of n% (bSPrecovRate,n;).
bSpeedRate               1018 // Moving speed increased of n% and only the highest among all is applied (bSpeedRate,n;).
bCriticalDef             1019 // Decreases the chance of being hit by critical hits of n% (bCriticalDef,n;).
//bNearAtkDef              1020 // Adds n% damage reduction against melee physical attacks (bNearAtkDef,n;).
//bLongAtkDef              1021 // Adds n% damage reduction against ranged physical attacks (bLongAtkDef,n;).
bDoubleRate              1022 // Adds a n% probability of doing a double attack (bDoubleRate,n;).
bDoubleAddRate           1023 // Adds another +n% probability of doing a double attack (bDoubleAddRate,n;).
//bMatk                    1024 // Adds a magical attack bonus of n (bMatk,n;).
bMatkRate                1025 // Adds a magical attack bonus percentage n% (bMatkRate,n;).
//bIgnoreDefEle            1026 // Disregards defense against enemies of a n element (bIgnoreDefEle,n;).
//bIgnoreDefRace           1027 // Disregards defense against enemies of a n race (bIgnoreDefRace,n;).
bAtkRate                 1028 // Adds an attack bonus of n% (bAtkRate,n;).
bSpeedAddRate            1029 // Adds a n% of walking speed (bSpeedAddRate,n;).
bAspdAddRate             1030 // Adds a n% of attack speed (bAspdAddRate,n;).
//bMagicAtkDef             1031 // Adds a n% damage reduction against magical attacks (bMagicAtkDef,n;).
//bMiscAtkDef              1032 // Adds a n% damage reduction against miscellaneous attacks (traps, falcon, ...) (bMiscAtkDef,n;).
//bIgnoreMdefEle           1033 // Disregards magical defense against enemies of a n element (bIgnoreMdefEle,n;).
//bIgnoreMdefRace          1034 // Disregards magical defense against enemies of a n race (bIgnoreMdefRace,n;).
//bMagicAddEle             1035 // Adds x% of magical damage against a n element (bMagicAddEle,n,x;).
//bMagicAddRace            1036 // Adds x% of magical damage against a n race (bMagicAddRace,n,x;).
//bMagicSubRace            1037 // Removes a x% of magical damage against a n race (bMagicSubRace,n,x;).
bPerfectHitRate          1038 // On-target impact attack probability n% and only the highest among all is applied (bPerfectHitRate,n;).
bPerfectHitAddRate       1039 // A n% bonus of an on-target impact (bPerfectHitAddRate,n;).
bCriticalRate            1040 // Add a n% to the critical hits percentage (bCriticalRate,n;).
//bGetZenyNum              1041 // When killing a monster, there is a x% chance of gaining about n zeny (bGetZenyNum,n;).
//bAddGetZenyNum           1042 // Same as bGetZenyNum, but the rates and zeny to gain stack (bAddGetZenyNum,n,x;).
//bAddDamageClass          1043 // +x% of extra physical damage against monsters of class n, against players n is their job id (bAddDamageClass,n,x;).
//bAddMagicDamageClass     1044 // +x% of extra magical damage against monsters of class n, against players n is their job id (bAddDamageClass,n,x;).
//bAddDefClass             1045 // +x% physical damage reduction against monsters of class n, against players n is their job id (bAddDefClass,n,x;)
//bAddMdefClass            1046 // +x% magical damage reduction against monsters of class n, against players n is their job id (bAddDefClass,n,x;)
//bAddMonsterDropItem      1047 // Adds a x/100% chance for a n item to be dropped, when killing any monster (bAddMonsterDropItem,n,x;)
//bDefRatioAtkEle          1048 // Does more damage depending on the monster's defense against a n element (bDefRatioAtkEle,n;).
//bDefRatioAtkRace         1049 // Does more damage depending on the monster's defense against a n race (bDefRatioAtkRace,n;).
bAddSpeed                1050 // Adds a n speed to the player (bAddSpeed,n;).
bHitRate                 1051 // Adds a n% rate to hit (bHitRate,n;).
bFleeRate                1052 // Adds a n% to flee a monster's attack (bFleeRate,n;).
bFlee2Rate               1053 // Adds a n% to dodge a monster's attack (bFleeRate,n;).
bDefRate                 1054 // Adds a n% of defense to the equipment (bDefRate,n;).
bDef2Rate                1055 // Adds a n% of defense based on the vitality to the equipment (bDef2Rate,n;).
bMdefRate                1056 // Adds a n% of magical defense to the equipment (bMdefRate,n;).
bMdef2Rate               1057 // Adds a n% of magical defense based on inteligence to the equipment (bMdef2Rate,n;).
//bSplashRange             1058 // Adds n to the splash attack radius and only the highest among all is applied (bSplashRange,n;).
//bSplashAddRange          1059 // Adds n to the splash attack radius (bSplashRange,n;).
//bAutoSpell               1060 // Auto Spell casting on attack of spell n at level x with a y/10% chance (bAutoSpell,n,x,y;).
bHPDrainRate             1061 // Adds a n/10% chance to receive x% of dealed damage as HP from a monster of race r with normal attack (bHPDrainRateRace,r,n,x;).
bSPDrainRate             1062 // Adds a n/10% chance to receive x% of dealed damage as SP from a monster of race r with normal attack (bSPDrainRateRace,r,n,x;).
//bShortWeaponDamageReturn 1063 // Reflects n% of received melee damage back to the enemy that caused it (bShortWeaponDamageReturn,n;).
//bLongWeaponDamageReturn  1064 // Reflects n% of received ranged damage back to the enemy that caused it (bShortWeaponDamageReturn,n;).
//bWeaponComaEle           1065 // Adds a n/100% chance to cause coma when attacking a monster of a x element with a normal attack (bWeaponComaEle,x,n;).
//bWeaponComaRace          1066 // Adds a n/100% chance to cause coma when attacking a monster of a x race with a normal attack (bWeaponComaEle,x,n;).
//bAddEff2                 1067 // Adds a n/100% chance to cause status change x on self when attacking (bAddEff2,x,n;).
//bMagicDamageReturn       1068 // Adds a n% chance to reflect targetted magic spells back to the enemy that caused it (bMagicDamageReturn,n;).
//bRandomAttackIncrease    1069 // Adds a n% chance to inflict x% additional damage to the enemy with normal attack (bRandomAttackIncrease,x,n;).
//bAllStats                1070 // Adds a n number in Strengh, Agility, Vitality, Intelligence, Dexterity and Luck (bAllStats,n;).
//bAgiVit                  1071 // Adds a n number in Agility and Vitality (bAgiVit,n;).
//bAgiDexStr               1072 // Adds a n number in Agility, Dexterity and Strengh (bAgiDexStr,n;).
//bPerfectHide             1073 // A hidden character is no longer detected by monsters with 'detector' mode (bPerfectHide,1;).
