// Authors: alastrim, Jenalya, Ali-G

function|script|Debug|,
{
    goto L_Begin;

L_Begin:
    set @debug_mask, 65535;
    set @debug_shift, 0;
    set @mexp, ((MAGIC_EXPERIENCE & @debug_mask) >> @debug_shift);
    mes "What do you want to do?";
    menu
        "Change my level.", L_Level,
        "Change my stats.", L_Status,
        "Change my skills.", L_Skills,
        "Test scenario.", L_Scenario,
        "Status debug.", L_StatusDebug,
        "Close.", L_Close;
        
L_Level:
    mes "What level do you want to be (min: 1 - max: 99)?";
    input @lvl;
    if (@lvl < 1)
        goto L_LevelTooLow;
    if (@lvl > 99)
        goto L_LevelTooHigh;
    if (BaseLevel == @lvl)
        goto L_SameLevel;
    set BaseLevel, @lvl;
    resetstatus;
    mes "You are now level " + BaseLevel + ".";
    goto L_Begin;

L_LevelTooLow:
    mes "Bad choice. Minimum level is 1.";
    next;
    goto L_Begin;

L_LevelTooHigh:
    mes "Bad choice. Maximum level is 99.";
    next;
    goto L_Begin;

L_SameLevel:
    mes "You already are level " + @lvl + ".";
    next;
    goto L_Begin;

L_Status:
    mes "What do you want to do?";
    menu
        "Set all of my stats myself.", L_ChangeStrength,
        "Set one of my stats myself.", L_ChangeSingleStat,
        "Get maximum points in all stats.", L_ChangeAllStats,
        "Reset my status points.", L_ResetStatusPoints,
        "Back to the main menu.", L_Begin,
        "Close.", L_Close;

L_ChangeAllStats:
    statusup2 bStr, 99 - readparam(bStr);
    statusup2 bAgi, 99 - readparam(bAgi);
    statusup2 bVit, 99 - readparam(bVit);
    statusup2 bInt, 99 - readparam(bInt);
    statusup2 bDex, 99 - readparam(bDex);
    statusup2 bLuk, 99 - readparam(bLuk);
    mes "You now have 99 in all stats.";
    next;
    goto L_Begin;

L_ChangeStrength:
    mes "How much strength do you want to have (min: 1 - max: 99)?";
    input @str;
    if (@str < 1)
        goto L_StatTooLow;
    if (@str > 99)
        goto L_StatTooHigh;
    statusup2 bStr, @str - readparam(bStr);
    goto L_ChangeAgility;

L_ChangeAgility:
    mes "How much agility do you want to have (min: 1 - max: 99)?";
    input @agi;
    if (@agi < 1)
        goto L_StatTooLow;
    if (@agi > 99)
        goto L_StatTooHigh;
    statusup2 bAgi, @agi - readparam(bAgi);
    goto L_ChangeVitality;

L_ChangeVitality:
    mes "How much vitality do you want to have (min: 1 - max: 99)?";
    input @vit;
    if (@vit < 1)
        goto L_StatTooLow;
    if (@vit > 99)
        goto L_StatTooHigh;
    statusup2 bVit, @vit - readparam(bVit);
    goto L_ChangeIntelligence;

L_ChangeIntelligence:
    mes "How much intelligence do you want to have (min: 1 - max: 99)?";
    input @int;
    if (@int < 1)
        goto L_StatTooLow;
    if (@int > 99)
        goto L_StatTooHigh;
    statusup2 bInt, @int - readparam(bInt);
    goto L_ChangeDexterity;

L_ChangeDexterity:
    mes "How much dexterity do you want to have (min: 1 - max: 99)?";
    input @dex;
    if (@dex < 1)
        goto L_StatTooLow;
    if (@dex > 99)
        goto L_StatTooHigh;
    statusup2 bDex, @dex - readparam(bDex);
    goto L_ChangeLuck;

L_ChangeLuck:
    mes "How much luck do you want to have (min: 1 - max: 99)?";
    input @luk;
    if (@luk < 1)
        goto L_StatTooLow;
    if (@luk > 99)
        goto L_StatTooHigh;
    statusup2 bLuk, @luk - readparam(bLuk);
    mes "You now have " + readparam(bStr) + " in strength.";
    mes "You now have " + readparam(bAgi) + " in agility.";
    mes "You now have " + readparam(bVit) + " in vitality.";
    mes "You now have " + readparam(bInt) + " in intelligence.";
    mes "You now have " + readparam(bDex) + " in dexterity.";
    mes "You now have " + readparam(bLuk) + " in luck.";
    next;
    goto L_Begin;

L_StatTooLow:
    mes "Bad choice. Minimum stat value is 1. Aborting.";
    next;
    goto L_Status;

L_StatTooHigh:
    mes "Bad choice. Maximum stat value is 99. Aborting.";
    next;
    goto L_Status;

L_ChangeSingleStat:
    mes "Which stat do you want to change?";
    menu
        "Strength.", L_ChangeStrengthSingle,
        "Agility.", L_ChangeAgilitySingle,
        "Vitality.", L_ChangeVitalitySingle,
        "Intelligence.", L_ChangeIntelligenceSingle,
        "Dexterity.", L_ChangeDexteritySingle,
        "Luck.", L_ChangeLuckSingle,
        "Back to the main menu.", L_Begin,
        "Close.", L_Close;

L_ChangeStrengthSingle:
    mes "How much strength do you want to have (min: 1 - max: 99)?";
    input @str;
    if (@str < 1)
        goto L_StatTooLow;
    if (@str > 99)
        goto L_StatTooHigh;
    statusup2 bStr, @str - readparam(bStr);
    mes "You now have " + readparam(bStr) + " in strength.";
    next;
    goto L_Begin;

L_ChangeAgilitySingle:
    mes "How much agility do you want to have (min: 1 - max: 99)?";
    input @agi;
    if (@agi < 1)
        goto L_StatTooLow;
    if (@agi > 99)
        goto L_StatTooHigh;
    statusup2 bAgi, @agi - readparam(bAgi);
    mes "You now have " + readparam(bAgi) + " in agility.";
    next;
    goto L_Begin;

L_ChangeVitalitySingle:
    mes "How much vitality do you want to have (min: 1 - max: 99)?";
    input @vit;
    if (@vit < 1)
        goto L_StatTooLow;
    if (@vit > 99)
        goto L_StatTooHigh;
    statusup2 bVit, @vit - readparam(bVit);
    mes "You now have " + readparam(bVit) + " in vitality.";
    next;
    goto L_Begin;

L_ChangeIntelligenceSingle:
    mes "How much intelligence do you want to have (min: 1 - max: 99)?";
    input @int;
    if (@int < 1)
        goto L_StatTooLow;
    if (@int > 99)
        goto L_StatTooHigh;
    statusup2 bInt, @int - readparam(bInt);
    mes "You now have " + readparam(bInt) + " in intelligence.";
    next;
    goto L_Begin;

L_ChangeDexteritySingle:
    mes "How much dexterity do you want to have (min: 1 - max: 99)?";
    input @dex;
    if (@dex < 1)
        goto L_StatTooLow;
    if (@dex > 99)
        goto L_StatTooHigh;
    statusup2 bDex, @dex - readparam(bDex);
    mes "You now have " + readparam(bDex) + " in dexterity.";
    next;
    goto L_Begin;

L_ChangeLuckSingle:
    mes "How much luck do you want to have (min: 1 - max: 99)?";
    input @luk;
    if (@luk < 1)
        goto L_StatTooLow;
    if (@luk > 99)
        goto L_StatTooHigh;
    statusup2 bLuk, @luk - readparam(bLuk);
    mes "You now have " + readparam(bLuk) + " in luck.";
    next;
    goto L_Begin;

L_ResetStatusPoints:
    resetstatus;
    mes "Stats successfully resetted.";
    next;
    goto L_Begin;

L_StatusDebug:
    callfunc "statusdebug";
    next;
    goto L_Begin;
    
L_Scenario:
    callfunc "scenariodebug";
    next;
    goto L_Begin;
    
L_Skills:
    callfunc "skillsdebug";
    next;
    goto L_Begin;
    
L_Close:
    close;    
}

042-2.gat,30,26,0|script|Debug0|154,
{
    callfunc "Debug";
    end;
OnInit:
    if (!debug)
        disablenpc "Debug0";
    end;
}

001-1.gat,41,29,0|script|Debug1|154,
{
    callfunc "Debug";
    end;
OnInit:
    if (!debug)
        disablenpc "Debug1";
    end;
}

009-1.gat,52,33,0|script|Debug2|154,
{
    callfunc "Debug";
    end;
OnInit:
    if (!debug)
        disablenpc "Debug2";
    end;
}

020-1.gat,75,85,0|script|Debug3|154,
{
    callfunc "Debug";
    end;
OnInit:
    if (!debug)
        disablenpc "Debug3";
    end;
}

botcheck.gat,50,28,0|script|Debug4|154,
{
    callfunc "Debug";
    end;
OnInit:
    if (!debug)
        disablenpc "Debug4";
    end;
}

027-2.gat,125,103,0|script|Debug5|154,
{
    callfunc "Debug";
    end;
OnInit:
    if (!debug)
        disablenpc "Debug5";
    end;
}
